<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sims.qsc.inspection_schedule.mapper.InspectionScheduleMapper">

    <select id="selectFilteredInspectionScheduleList" resultType="com.sims.qsc.inspection_schedule.vo.InspectionScheduleRequest">
        SELECT  /* InspectionScheduleMapper.getInspectionScheduleList 노승우 */
        STO.STORE_NM
        , STO.STORE_ID
        , CASE
        WHEN STO.BRAND_CD = 'B001' THEN 'KCC 크라상'
        WHEN STO.BRAND_CD = 'B002' THEN 'KCC 도넛'
        WHEN STO.BRAND_CD = 'B003' THEN 'KCC 브레드'
        WHEN STO.BRAND_CD = 'B004' THEN 'KCC 카페'
        END AS BRAND_NM
        , CHK.CHKLST_NM
        , CHK.CHKLST_ID
        , ISC.INSP_PLAN_DT
        , MBR.MBR_NM
        , INP.CNT_CD
        , INP.FRQ_CD
        , CASE
        WHEN CHK.INSP_TYPE_CD = 'IT001' THEN '제품점검'
        WHEN CHK.INSP_TYPE_CD = 'IT002' THEN '위생점검'
        WHEN CHK.INSP_TYPE_CD = 'IT003' THEN '정기점검'
        WHEN CHK.INSP_TYPE_CD = 'IT004' THEN '비정기점검'
        WHEN CHK.INSP_TYPE_CD = 'IT005' THEN '기획점검'
        END AS INSP_TYPE_CD
        , INP.WEEK
        , INP.SLCT_DT
        , INP.INSP_PLAN_ID

        FROM INSP_SCHD ISC
        INNER JOIN STORE STO
        ON STO.STORE_ID = ISC.STORE_ID
        INNER JOIN INSP_PLAN INP
        ON INP.INSP_PLAN_ID = ISC.INSP_PLAN_ID
        INNER JOIN CHKLST CHK
        ON CHK.CHKLST_ID = INP.CHKLST_ID
        INNER JOIN MBR
        ON MBR.MBR_ID = STO.INSP_MBR_ID
        WHERE INP.INSP_PLAN_USE_W = 'Y'


        <choose>
            <when test="currentMbrNo != null and currentMbrNo.startsWith('S')">
                AND STO.SV_MBR_ID = (SELECT MBR_ID FROM MBR WHERE MBR_NO = #{currentMbrNo})
            </when>
            <when test="currentMbrNo != null and currentMbrNo.startsWith('C')">
                AND STO.INSP_MBR_ID = (SELECT MBR_ID FROM MBR WHERE MBR_NO = #{currentMbrNo})
            </when>
        </choose>


        <if test="storeNm != null and storeNm != ''">
            AND STO.STORE_NM LIKE '%' || #{storeNm} || '%'
        </if>


        <if test="brandNm != null and brandNm != ''">
            <choose>
                <when test="brandNm == 'KCC 크라상'">
                    AND STO.BRAND_CD = 'B001'
                </when>
                <when test="brandNm == 'KCC 도넛'">
                    AND STO.BRAND_CD = 'B002'
                </when>
                <when test="brandNm == 'KCC 브레드'">
                    AND STO.BRAND_CD = 'B003'
                </when>
                <when test="brandNm == 'KCC 카페'">
                    AND STO.BRAND_CD = 'B004'
                </when>
                <otherwise>
                    AND STO.BRAND_CD IS NOT NULL
                </otherwise>
            </choose>
        </if>


        <if test="scheduleDate != null and scheduleDate != ''">
            AND ISC.INSP_PLAN_DT LIKE '%' || #{scheduleDate} || '%'
        </if>
        <if test="chklstNm != null and chklstNm != ''">
            AND CHK.CHKLST_NM LIKE '%' || #{chklstNm} || '%'
        </if>
        <if test="inspector != null and inspector != ''">
            AND MBR.MBR_NM LIKE '%' || #{inspector} || '%'
        </if>
        <if test="cntCd != null and cntCd !=''" >
            AND INP.CNT_CD = #{cntCd}
        </if>
        <if test="frqCd != null and frqCd !=''" >
            AND INP.FRQ_CD = #{frqCd}
        </if>
        ORDER BY ISC.INSP_PLAN_DT DESC
    </select>




    <select id="selectAllStores" resultType="java.util.HashMap">
        SELECT DISTINCT   /* InspectionScheduleMapper.selectAllStores 노승우 */
        STO.STORE_NM
        , INSP_ID.MBR_NM AS INSPECTOR
        , CCD.DTL_CD_NM AS BRAND_NM
        FROM STORE STO
        INNER JOIN COMM_CD_DTL CCD
        ON CCD.DTL_CD = STO.BRAND_CD
        INNER JOIN MBR INSP_ID
        ON INSP_ID.MBR_ID = STO.INSP_MBR_ID
        INNER JOIN MBR SV_ID
        ON SV_ID.MBR_ID = STO.SV_MBR_ID
        <where>
            <choose>
                <when test="currentMbrNo != null and currentMbrNo.startsWith('S')">
                    STO.SV_MBR_ID = (SELECT MBR_ID FROM MBR WHERE MBR_NO = #{currentMbrNo})
                </when>
                <when test="currentMbrNo != null and currentMbrNo.startsWith('C')">
                    STO.INSP_MBR_ID = (SELECT MBR_ID FROM MBR WHERE MBR_NO = #{currentMbrNo})
                </when>
            </choose>
        </where>
        ORDER BY STO.STORE_NM
    </select>


    <select id="selectAllBrands" resultType="java.util.HashMap">
        SELECT  /* InspectionScheduleMapper.selectAllBrands 노승우 */
            DISTINCT
            CASE
                WHEN STO.BRAND_CD = 'B001' THEN 'KCC 크라상'
                WHEN STO.BRAND_CD = 'B002' THEN 'KCC 도넛'
                WHEN STO.BRAND_CD = 'B003' THEN 'KCC 브레드'
                WHEN STO.BRAND_CD = 'B004' THEN 'KCC 카페'
                END AS BRAND_NM
        FROM STORE STO
        WHERE
            STO.BRAND_CD IN ('B001', 'B002', 'B003', 'B004')
        ORDER BY
            BRAND_NM
    </select>


    <select id="selectAllChecklists" resultType="String">
        SELECT /*InspectionScheduleMapper.selectAllChecklists*/
            CHKLST.CHKLST_NM
            , CHKLST.CHKLST_ID
            , CCD.DTL_CD_NM
            , CCD.COMM_CD_ID

        FROM CHKLST
                 INNER JOIN COMM_CD_DTL CCD
                            ON CCD.DTL_CD = CHKLST.INSP_TYPE_CD
        WHERE CHKLST.CHKLST_USE_W = 'Y'
        ORDER BY CHKLST.CHKLST_NM DESC
    </select>


    <select id="selectAllInspectors" resultType="String">
        SELECT /* InspectionScheduleMapper.selectAllInspectors 노승우 */
            DISTINCT
            MBR.MBR_NM
        FROM
            INSP_SCHD ISC
                INNER JOIN STORE STO
                           ON STO.STORE_ID = ISC.STORE_ID
                INNER JOIN MBR
                           ON MBR.MBR_ID = STO.INSP_MBR_ID
        ORDER BY
            MBR.MBR_NM
    </select>


    <select id="selectInspectionDetails"
            resultType="com.sims.qsc.inspection_schedule.vo.InspectionDetailsResponse">
        SELECT /* InspectionScheduleMapper.getInspectionDetails 노승우 */
            S.STORE_ID
             , S.STORE_NM
             , IP.INSP_PLAN_ID
             , IP.FRQ_CD
             , C.CHKLST_ID
             , C.CHKLST_NM
             , CC.CTG_ID
             , CC.CTG_NM
             , CE.EVIT_ID
             , CE.EVIT_CONTENT
             , CE.SCORE
        FROM
            STORE S
                JOIN INSP_SCHD ISCH
                     ON S.STORE_ID = ISCH.STORE_ID
                JOIN INSP_PLAN IP
                     ON ISCH.INSP_PLAN_ID = IP.INSP_PLAN_ID
                JOIN CHKLST C
                     ON IP.CHKLST_ID = C.CHKLST_ID
                JOIN CHKLST_CTG CC
                     ON C.CHKLST_ID = CC.CHKLST_ID
                JOIN CHKLST_EVIT CE
                     ON CC.CTG_ID = CE.CTG_ID
        WHERE
            S.STORE_ID = #{storeId}
          AND
            inp.insp_plan_use_w = 'Y'
        ORDER BY
            CC.SEQ, CE.EVIT_SEQ

    </select>

    <select id="selectBottomChkLst" resultType="java.util.HashMap">
        SELECT /*InspectionScheduleMapper.selectBottomChkLst*/
            CHKLST.CHKLST_NM
             , CHKLST.CHKLST_ID
             , CCD.DTL_CD_NM
             , CCD.COMM_CD_ID
        FROM CHKLST
                 INNER JOIN COMM_CD_DTL CCD
                            ON CCD.DTL_CD = CHKLST.INSP_TYPE_CD
        WHERE CHKLST.CHKLST_USE_W = 'Y'
        ORDER BY CHKLST.CHKLST_NM DESC
    </select>

    <select id="selectBottomINSP" resultType="String">
        SELECT /* InspectionScheduleMapper.selectBottomINSP 노승우 */
            DTL_CD_NM
        FROM
            COMM_CD_DTL
        WHERE
            COMM_CD_ID = '4'
    </select>


<!--    <insert id="insertInspectionPlan" parameterType="com.sims.qsc.inspection_schedule.vo.InspectionPlan">-->
<!--        INSERT INTO INSP_PLAN (-->
<!--            INSP_PLAN_ID,-->
<!--            CHKLST_ID,-->
<!--            FRQ_CD,-->
<!--            CNT_CD,-->
<!--            SLCT_DT,-->
<!--            WEEK,-->
<!--            INSP_PLAN_USE_W,-->
<!--            CRE_MBR_ID,-->
<!--            CRE_TM,-->
<!--            INSP_PLAN_STTS_W-->
<!--        ) VALUES (-->
<!--                     INSP_PLAN_SEQ.NEXTVAL,-->
<!--                     #{chklstId},-->
<!--                     #{frqCd},-->
<!--                     #{cntCd},-->
<!--                     #{slctDt},-->
<!--                     #{week},-->
<!--                     #{inspPlanUseW},-->
<!--                     #{creMbrId},-->
<!--                     TO_DATE(CURRENT_DATE,, 'yyyyMMddHHmmss'),-->
<!--                     1-->
<!--                 )-->
<!--    </insert>-->


<!--    <update id="updateInspectionPlan" parameterType="com.sims.qsc.inspection_schedule.vo.InspectionPlan">-->
<!--        UPDATE INSP_PLAN-->
<!--        SET-->
<!--            CHKLST_ID = #{chklstId},-->
<!--            FRQ_CD = #{frqCd},-->
<!--            CNT_CD = #{cntCd},-->
<!--            SLCT_DT = #{slctDt},-->
<!--            WEEK = #{week},-->
<!--            INSP_PLAN_USE_W = #{inspPlanUseW},-->
<!--            UPD_MBR_ID = #{updMbrId},-->
<!--            UPD_TM = TO_DATE(CURRENT_DATE,, 'yyyyMMddHHmmss'),-->
<!--        WHERE INSP_PLAN_ID = #{inspPlanId}-->
<!--    </update>-->


    <insert id="insertOrUpdateInspectionPlans" parameterType="java.util.List">
        <foreach collection="list" item="item">
            MERGE INTO INSP_PLAN T
            USING (SELECT #{item.inspPlanId} AS INSP_PLAN_ID FROM DUAL) S
            ON (T.INSP_PLAN_ID = S.INSP_PLAN_ID OR (T.INSP_PLAN_ID IS NULL AND S.INSP_PLAN_ID IS NULL))
            WHEN MATCHED THEN
            UPDATE SET
            CHKLST_ID = #{item.chklstId},
            FRQ_CD = #{item.frqCd},
            CNT_CD = #{item.cntCd},
            SLCT_DT = #{item.slctDt},
            WEEK = #{item.week},
            INSP_PLAN_USE_W = #{item.inspPlanUseW},
            UPD_MBR_ID = #{item.updMbrId},
            UPD_TM = CURRENT_DATE,
            INSP_PLAN_STTS_W = #{item.inspPlanSttsW}
            WHEN NOT MATCHED THEN
            INSERT (
            INSP_PLAN_ID,
            CHKLST_ID,
            FRQ_CD,
            CNT_CD,
            SLCT_DT,
            WEEK,
            INSP_PLAN_USE_W,
            CRE_MBR_ID,
            CRE_TM,
            INSP_PLAN_STTS_W
            ) VALUES (
            INSP_PLAN_SEQ.NEXTVAL,
            #{item.chklstId},
            #{item.frqCd},
            #{item.cntCd},
            #{item.slctDt},
            #{item.week},
            #{item.inspPlanUseW},
            #{item.creMbrId},
            CURRENT_DATE,
            '1'
            )
        </foreach>
    </insert>


    <select id="selectDetailSchedule" parameterType="com.sims.qsc.inspection_schedule.vo.InspectionSchedule">
        SELECT *
        FROM INSP_SCHD
        WHERE INSP_PLAN_ID = #{inspPlanId}
    </select>

    <select id="selectMbrDetail" parameterType="com.sims.qsc.inspection_schedule.vo.MemberRequest">
        SELECT  *
        FROM MBR
        WHERE MBR.MBR_NO = #{mbrNo}
    </select>


    <update id="insertInspectionSchedules" parameterType="java.util.List">
        <foreach collection="list" item="item">
            MERGE INTO INSP_SCHD T
            USING (SELECT #{item.inspPlanId} AS NEW_ID FROM DUAL) S
            ON (T.INSP_PLAN_ID = S.NEW_ID OR (T.INSP_PLAN_ID IS NULL AND S.NEW_ID IS NULL))
            WHEN MATCHED THEN
            UPDATE SET
            T.STORE_ID = #{item.storeId},
            T.INSP_STTS_CD = #{item.inspSttsCd},
            T.UPD_MBR_ID = #{item.updMbrId},
            T.INSP_PLAN_DT = #{item.inspPlanDt},
            T.INSP_SCHD_STTS_W = #{item.inspSchdSttsW},
            T.UPD_TM = TO_CHAR(CURRENT_DATE, 'YYYYMMDDHH24MI')
            WHEN NOT MATCHED THEN
            INSERT (
            INSP_SCHD_ID,
            INSP_PLAN_ID,
            STORE_ID,
            INSP_PLAN_DT,
            INSP_STTS_CD,
            CRE_MBR_ID,
            INSP_SCHD_STTS_W,
            CRE_TM
            ) VALUES (
            INSP_SCHD_SEQ.NEXTVAL,
            #{item.inspPlanId},
            #{item.storeId},
            #{item.inspPlanDt},
            #{item.inspSttsCd},
            #{item.creMbrId},
            '1',
            TO_CHAR(CURRENT_DATE, 'YYYYMMDDHH24MI')
            )
        </foreach>
    </update>


</mapper>
