<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sims.master.checklist_manage.mapper.ChecklistMapper">
    <select id="selectChecklistAll">
        SELECT /* ChecklistMapper.selectChecklistAll 유재원 */
            CHKLST.CHKLST_ID
            , BRAND_NM.DTL_CD_NM AS brandNm
            , MASTER_CHKLST.CHKLST_NM AS masterChklstNm
            , CHKLST.CHKLST_NM
            , CHKLST.CHKLST_USE_W
            , INSP_TYPE_NM.DTL_CD_NM AS inspTypeNm
            , TO_CHAR(TO_DATE(CHKLST.CRE_TM, 'YYYYMMDDHH24MI'), 'YYYY.MM.DD') AS creTm
            , (SELECT
                 CASE
                     WHEN EXISTS (SELECT
                                     1
                                 FROM
                                     CHKLST SUB_CHKLST
                                 WHERE
                                     SUB_CHKLST.MASTER_CHKLST_ID = CHKLST.CHKLST_ID)
                        THEN 'Y'
                     ELSE 'N'
                     END
             FROM
                 DUAL) AS masterChklstW
        FROM
            CHKLST
        LEFT JOIN COMM_CD_DTL BRAND_NM
        ON CHKLST.BRAND_CD = BRAND_NM.DTL_CD
        LEFT JOIN COMM_CD_DTL INSP_TYPE_NM
        ON CHKLST.INSP_TYPE_CD = INSP_TYPE_NM.DTL_CD
        LEFT JOIN CHKLST MASTER_CHKLST
        ON CHKLST.MASTER_CHKLST_ID = MASTER_CHKLST.CHKLST_ID
        WHERE
            CHKLST.CHKLST_STTS_W != '0'
        <if test="brandNm != null">
            AND BRAND_NM.DTL_CD_NM = #{brandNm}
        </if>
        <if test="chklstNm != null">
            AND CHKLST.CHKLST_NM = #{chklstNm}
        </if>
        <if test="masterChklstNm != null">
            AND CHKLST.MASTER_CHKLST_ID = (SELECT CHKLST_ID FROM CHKLST WHERE CHKLST_NM = #{masterChklstNm})
        </if>
        <if test="inspTypeNm != null">
            AND INSP_TYPE_NM.DTL_CD_NM = #{inspTypeNm}
        </if>
        <if test="creTm != null">
            AND TO_CHAR(TO_DATE(CHKLST.CRE_TM, 'YYYYMMDDHH24MI'), 'YYYY-MM-DD') = #{creTm}
        </if>
        <if test="chklstUseW != null">
            AND CHKLST.CHKLST_USE_W = #{chklstUseW}
        </if>
        ORDER BY
        CHKLST.CHKLST_ID DESC
    </select>



    <update id="deleteChecklistByChklstId" parameterType="List">
        UPDATE /* ChecklistMapper.deleteChecklistByChklstId 유재원 */
            CHKLST
        SET
            CHKLST_STTS_W = '0'
        WHERE
            CHKLST_ID
                IN
                    <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
                        #{item.chklstId}
                    </foreach>
    </update>

    <select id="selectBrandOptions">
        SELECT /* ChecklistMapper.selectBrandOptions 유재원 */
            DTL_CD_NM
        FROM
            COMM_CD_DTL
        WHERE
            DTL_CD
                LIKE
                    'B0%'
    </select>

    <select id="selectInspTypeOptions">
        SELECT /* ChecklistMapper.selectInspTypeOptions 유재원 */
            DTL_CD_NM
        FROM
            COMM_CD_DTL
        WHERE
            DTL_CD
                LIKE
                    'IT%'
    </select>

    <select id="selectChecklistOptions">
        SELECT /* ChecklistMapper.selectChecklistOptions 유재원 */
            CHKLST_NM
        FROM
            CHKLST
        WHERE
            CHKLST_STTS_W = 1
    </select>

    <select id="selectChklstIdByChklstIdAndChklstUseW">
        SELECT /* ChecklistMapper.selectChklstIdByChklstIdAndChklstUseW 유재원 */
            CHKLST_ID
        FROM
            CHKLST
        WHERE
            CHKLST_ID IN
        <foreach item="item" index="index" collection="checklistDeleteRequest" open="(" separator="," close=")">
            #{item.chklstId}
        </foreach>
        AND
            CHKLST_USE_W = 'Y'
    </select>

    <select id="selectChklstCount" parameterType="map" resultType="int">
        SELECT
            COUNT(*)
        FROM
            CHKLST
        <where>
            <foreach collection="list" item="item" separator=" OR ">
                CHKLST_NM = #{item}
            </foreach>
        </where>
    </select>


    <update id="insertOrUpdateChecklist">
        MERGE INTO /* ChecklistMapper.insertOrUpdateChecklist 유재원 */
            CHKLST
        USING (
            <foreach collection="list" item="item" separator="UNION ALL">
                SELECT
                    #{item.chklstId} AS CHKLST_ID
                    , (SELECT
                           DTL_CD
                       FROM
                           COMM_CD
                          , COMM_CD_DTL
                       WHERE
                           COMM_CD.COMM_CD_ID = COMM_CD_DTL.COMM_CD_ID
                         AND
                           DTL_CD_NM = #{item.brandNm}) AS BRAND_CD
                    , (SELECT
                              CHKLST_ID
                          FROM
                              CHKLST
                          WHERE
                              CHKLST_NM = #{item.masterChklstNm}) AS MASTER_CHKLST_ID
                    , #{item.chklstNm} AS CHKLST_NM
                    , #{item.chklstUseW} AS CHKLST_USE_W
                    , (SELECT
                           DTL_CD
                       FROM
                           COMM_CD
                          , COMM_CD_DTL
                       WHERE
                           COMM_CD.COMM_CD_ID = COMM_CD_DTL.COMM_CD_ID
                         AND
                           DTL_CD_NM = #{item.inspTypeNm}) AS INSP_TYPE_CD
                    , (SELECT
                           MBR_ID
                       FROM
                           MBR
                       WHERE
                           MBR_NO = #{item.MbrNo}) AS CRE_MBR_ID
                FROM
                    DUAL
            </foreach>
        ) temp
        ON
            (CHKLST.CHKLST_ID = temp.CHKLST_ID)
        WHEN MATCHED THEN
        UPDATE SET
            BRAND_CD = temp.BRAND_CD
            , MASTER_CHKLST_ID = temp.MASTER_CHKLST_ID
            , CHKLST_NM = temp.CHKLST_NM
            , CHKLST_USE_W = temp.CHKLST_USE_W
            , INSP_TYPE_CD = temp.INSP_TYPE_CD
            , UPD_MBR_ID = temp.CRE_MBR_ID
            , UPD_TM = TO_CHAR(CURRENT_DATE, 'YYYYMMDDHH24MI')
        WHEN NOT MATCHED THEN
        INSERT (
            CHKLST_ID
            , BRAND_CD
            , MASTER_CHKLST_ID
            , CHKLST_NM
            , CHKLST_USE_W
            , INSP_TYPE_CD
            , CRE_MBR_ID
            , CRE_TM
            , CHKLST_STTS_W
        )
        VALUES (
            CHKLST_SEQ.NEXTVAL
            , temp.BRAND_CD
            , temp.MASTER_CHKLST_ID
            , temp.CHKLST_NM
            , 'N'
            , temp.INSP_TYPE_CD
            , temp.CRE_MBR_ID
            , TO_CHAR(CURRENT_DATE, 'YYYYMMDDHH24MI')
            , '1'
        )
    </update>


    <select id="selectChecklistPreview" resultType="Map" parameterType="String">
        SELECT /* ChecklistMapper.selectChecklistPreview 유재원 */
            CTG.CTG_NM AS category
            , SUBCTG.CTG_NM AS subCategory
            , EVIT.EVIT_CONTENT AS evitContent
            , CHCLST.CHCLST_CONTENT AS checkListContent
            , CHCLST.CHCLST_ID AS checkListId
        FROM
            CHKLST_CTG CTG
                LEFT JOIN
            CHKLST_CTG SUBCTG ON CTG.CTG_ID = SUBCTG.MASTER_CTG_ID
                LEFT JOIN
            CHKLST_EVIT EVIT ON SUBCTG.CTG_ID = EVIT.CTG_ID
                LEFT JOIN
            EVIT_CHCLST CHCLST ON EVIT.EVIT_ID = CHCLST.EVIT_ID
        WHERE
            SUBCTG.CHKLST_ID = (SELECT CHKLST_ID FROM CHKLST WHERE CHKLST_NM = #{chklstNm})
        ORDER BY
            CTG.CTG_ID, SUBCTG.CTG_ID, EVIT.EVIT_ID, CHCLST.CHCLST_ID
    </select>

    <update id="updateChklstUseW">
        UPDATE /* ChecklistMapper.updateChklstUseW 유재원 */
            CHKLST
        SET
            CHKLST_USE_W = 'Y'
        WHERE
            CHKLST_ID = #{chklstId}
    </update>

    <update id="updateMasterChklst">
        UPDATE /* ChecklistMapper.updateMasterChklst 유재원 */
            CHKLST
        SET
            MASTER_CHKLST_ID = #{masterChklstId}
        WHERE
            CHKLST_ID = #{newChklstId}
    </update>







    <!-- 마스터 체크리스트 ID 가져오기 -->
    <select id="selectMasterChecklistId" resultType="Long">
        SELECT
            CHKLST_ID
        FROM
            CHKLST
        WHERE
            CHKLST_NM = #{masterChklstNm}
    </select>

    <select id="selectMasterChklstCtg">
        SELECT *
        FROM CHKLST_CTG
        WHERE CHKLST_ID = #{masterChklstId}
        AND MASTER_CTG_ID IS NULL
    </select>

    <select id="selectMasterChklstSubCtg">
        SELECT *
        FROM CHKLST_CTG
        WHERE CHKLST_ID = #{masterChklstId}
          AND MASTER_CTG_ID IS NOT NULL
        ORDER BY MASTER_CTG_ID, CTG_ID
    </select>

    <select id="selectMasterChklstEvit">
        SELECT *
        FROM CHKLST_EVIT ce
        WHERE
            CTG_ID
                  IN (SELECT CTG_ID FROM CHKLST_CTG cc WHERE CHKLST_ID = #{masterChklstId}
                                                                                AND MASTER_CTG_ID IS NOT NULL)
    </select>

    <select id="selectMasterChklstChclst">
        SELECT
            ec.CHCLST_ID,
            ec.EVIT_ID,
            ec.CHCLST_CONTENT,
            ec.NPRFS_CD,
            ec.PRF_W,
            ec.SCORE,
            ec.PENALTY,
            ec.BSN_SSPN_DAYNUM,
            ec.EVIT_CHCLST_USE_W,
            ec.CHCLST_SEQ,
            ec.CRE_MBR_ID,
            ec.UPD_MBR_ID,
            ec.CRE_TM,
            ec.UPD_TM
        FROM
            EVIT_CHCLST ec
                JOIN
            CHKLST_EVIT ce ON ec.EVIT_ID = ce.EVIT_ID
                JOIN
            CHKLST_CTG cc ON ce.CTG_ID = cc.CTG_ID
        WHERE
            cc.CHKLST_ID = #{masterChklstId}
    </select>

    <!-- 대분류 복사 -->
    <insert id="insertCtgCopy">
        <selectKey keyProperty="ctgId" resultType="long" order="BEFORE">
            SELECT CHKLST_CTG_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO
            CHKLST_CTG (CTG_ID, CTG_NM, CHKLST_ID, MASTER_CTG_ID, CTG_USE_W, SEQ, STND_SCORE, CRE_MBR_ID, CRE_TM)
        SELECT
            #{ctgId},
            CTG_NM,
            #{newChklstId},
            NULL,
            CTG_USE_W,
            SEQ,
            STND_SCORE,
            CRE_MBR_ID,
            TO_CHAR(CURRENT_DATE, 'YYYYMMDDHH24MI')
        FROM CHKLST_CTG cc
        WHERE CHKLST_ID = #{masterChklstId}
        AND MASTER_CTG_ID IS NULL
    </insert>




</mapper>
